#' @param geno the expression matrix of scRNA data, a matrix  ngene * ncell
#' @param t the number sequence of gene
#' @param nbasis the number of basis
#' @param genobasis the object of basis
#' @param cell.type.factor the annotation of scRNA data
#' @param nfpca the numer of the principle component
#' @param W inverse of covariance matrix

fpca_single_cell2=function(geno,t,nbasis,genobasis,cell.type.factor,nfpca,W){
  cell.type.factor.all=unique(cell.type.factor)
  Phi <- fda::eval.basis(t, genobasis)
  geno.max = max(geno)
  # geno = geno / geno.max
  #geno <- t(geno)
  U=ginv(t(Phi) %*% W %*% Phi) %*% t(Phi) %*% W %*% geno
  fd_obj1=fda::fd(coef = U,basisobj = genobasis)
  #C=U
  fd_obj1_eval=fda::eval.fd(t,fd_obj1)
  fpca1=fda::pca.fd(fd_obj1,nharm = nfpca)
  #fpca???Ä»?????
  fpca1_basis_eval=Phi%*%fpca1$harmonics$coefs

  fpca_matrix=fpca1_basis_eval
  # for (i in 1:length(cell.type.factor.all)) {
  #   U_celltype=U[which(cell.type.factor==cell.type.factor.all[i]),]
  #   fd_celltype_obj=fd(coef = t(U_celltype),basisobj = genobasis)
  #   fd_celltype_eval=eval.fd(t,fd_celltype_obj)
  #   fpca_celltype=pca.fd(fd_celltype_obj,nharm=nbasis)
  #   fpca_celltype_eval=Phi%*%fpca_celltype$harmonics$coefs[,(nbasis-1):nbasis]
  #   fpca_matrix=cbind(fpca_matrix,fpca_celltype_eval)
  # }
  #
  # for (i in 1:length(cell.type.factor.all)) {
  #   U_celltype=U[which(cell.type.factor==cell.type.factor.all[i]),]
  #   fd_celltype_obj=fd(coef = t(U_celltype),basisobj = genobasis)
  #   fd_celltype_eval=eval.fd(t,fd_celltype_obj)
  #   fpca_celltype=pca.fd(fd_celltype_obj,nharm=nbasis)
  #   fpca_celltype_eval=Phi%*%fpca_celltype$harmonics$coefs[,1]
  #   fpca_matrix=cbind(fpca_matrix,fpca_celltype_eval)
  # }
  #
  return(fpca_matrix)

}
